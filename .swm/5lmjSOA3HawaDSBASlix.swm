{
    "id": "5lmjSOA3HawaDSBASlix",
    "name": "Read Only for sub-items",
    "dod": "In this unit you should pass a prop from Home to TreeView to allow readonly tree for sublist case.",
    "description": "Currently it is possible to edit, add child, and add entry in the sub item tree view. We want that in the case of a sub-item that the tree will be read only, and be editable only for Home. \n\nThe Home component has the information wether the Home or a sub item is need to be render. You should pass this information to the from the home component to the treeView. \n\nAfter you are done, only when clicking Home on the menu the tree should be editable (text fields, '+') and for the rest cases the tree is for read only.",
    "summary": "",
    "hunksOrder": [
        "src/components/TreeView.vue_0",
        "src/components/TreeView.vue_1",
        "src/components/TreeView.vue_2",
        "src/views/Home.vue_0"
    ],
    "tests": [],
    "hints": [
        "Have you used props?",
        "What directive can be used to decide if a block should be render to the DOM?"
    ],
    "play_mode": "handson",
    "swimmPatch": {
        "src/components/TreeView.vue": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/components/TreeView.vue b/src/components/TreeView.vue\nindex 1645e94..2c78102 100644\n--- a/src/components/TreeView.vue\n+++ b/src/components/TreeView.vue",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -2,14 +2,13 @@",
                        "   <div>",
                        "     <v-container class=\"text-center\">",
                        "       <v-toolbar-title class=\"custom-class\">{{ title }}</v-toolbar-title>",
                        "-      <v-btn v-if=\"!readOnly\" icon @click=\"addEntry\"",
                        "+      <v-btn icon @click=\"addEntrie\"",
                        "         ><v-icon>mdi-plus</v-icon></v-btn",
                        "       >",
                        "     </v-container>",
                        "     <v-treeview open-all :items=\"items\">",
                        "       <template slot=\"label\" slot-scope=\"{ item }\">",
                        "         <v-text-field",
                        "-          v-if=\"!readOnly\"",
                        "           class=\"text-field\"",
                        "           v-model=\"item.name\"",
                        "           @input=\"updateInput\""
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -17,9 +16,9 @@",
                        "           @click:append=\"deleteItem(item.id)\"",
                        "         >",
                        "         </v-text-field>",
                        "-        <div v-else>{{ item.name }}</div>",
                        "+        <!-- <div>{{ item.name }}</div> -->",
                        "       </template>",
                        "-      <template v-if=\"!readOnly\" slot=\"prepend\" slot-scope=\"{ item }\">",
                        "+      <template slot=\"prepend\" slot-scope=\"{ item }\">",
                        "         <v-tooltip bottom>",
                        "           <template v-slot:activator=\"{ on, attrs }\">",
                        "             <v-btn v-bind=\"attrs\" v-on=\"on\" icon @click=\"addChild(item)\">"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -41,7 +40,6 @@",
                        "   props: {",
                        "     items: Array,",
                        "     title: String,",
                        "-    readOnly: Boolean,",
                        "   },",
                        "   computed: {",
                        "     ...mapState([\"nextId\"]),"
                    ]
                }
            ]
        },
        "src/views/Home.vue": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/views/Home.vue b/src/views/Home.vue\nindex b847144..0477f98 100644\n--- a/src/views/Home.vue\n+++ b/src/views/Home.vue",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -1,6 +1,6 @@",
                        " <template>",
                        "   <v-container class=\"home\">",
                        "-    <tree-view :read-only=\"!isHomePage\" :items=\"itemToDisplay\" :title=\"title\" @updateItems=\"updateItems\" />",
                        "+    <tree-view :items=\"itemToDisplay\" :title=\"title\" @updateItems=\"updateItems\" />",
                        "   </v-container>",
                        " </template>",
                        " "
                    ]
                }
            ]
        }
    },
    "app_version": "0.2.7",
    "file_version": "1.0.4",
    "last_commit_sha_for_swimm_patch": "682c1ec06ef3f4e1053e408f2b277c1f0b1950ab",
    "diff": "diff --git a/src/components/TreeView.vue b/src/components/TreeView.vue\nindex 1645e94..2c78102 100644\n--- a/src/components/TreeView.vue\n+++ b/src/components/TreeView.vue\n@@ -2,14 +2,13 @@\n   <div>\n     <v-container class=\"text-center\">\n       <v-toolbar-title class=\"custom-class\">{{ title }}</v-toolbar-title>\n-      <v-btn v-if=\"!readOnly\" icon @click=\"addEntry\"\n+      <v-btn icon @click=\"addEntrie\"\n         ><v-icon>mdi-plus</v-icon></v-btn\n       >\n     </v-container>\n     <v-treeview open-all :items=\"items\">\n       <template slot=\"label\" slot-scope=\"{ item }\">\n         <v-text-field\n-          v-if=\"!readOnly\"\n           class=\"text-field\"\n           v-model=\"item.name\"\n           @input=\"updateInput\"\n@@ -17,9 +16,9 @@\n           @click:append=\"deleteItem(item.id)\"\n         >\n         </v-text-field>\n-        <div v-else>{{ item.name }}</div>\n+        <!-- <div>{{ item.name }}</div> -->\n       </template>\n-      <template v-if=\"!readOnly\" slot=\"prepend\" slot-scope=\"{ item }\">\n+      <template slot=\"prepend\" slot-scope=\"{ item }\">\n         <v-tooltip bottom>\n           <template v-slot:activator=\"{ on, attrs }\">\n             <v-btn v-bind=\"attrs\" v-on=\"on\" icon @click=\"addChild(item)\">\n@@ -41,7 +40,6 @@\n   props: {\n     items: Array,\n     title: String,\n-    readOnly: Boolean,\n   },\n   computed: {\n     ...mapState([\"nextId\"]),\ndiff --git a/src/views/Home.vue b/src/views/Home.vue\nindex b847144..0477f98 100644\n--- a/src/views/Home.vue\n+++ b/src/views/Home.vue\n@@ -1,6 +1,6 @@\n <template>\n   <v-container class=\"home\">\n-    <tree-view :read-only=\"!isHomePage\" :items=\"itemToDisplay\" :title=\"title\" @updateItems=\"updateItems\" />\n+    <tree-view :items=\"itemToDisplay\" :title=\"title\" @updateItems=\"updateItems\" />\n   </v-container>\n </template>\n \n"
}