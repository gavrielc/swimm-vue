{
    "id": "5r8lM3rKD84zzL1tGrDK",
    "name": "Sha unit",
    "dod": "In this unit you should shhh",
    "description": "Work with store\n68565d092fe5bc259bdc7eccde8924b769980ff5",
    "summary": "",
    "hunksOrder": [
        "src/components/TreeView.vue_1",
        "src/components/TreeView.vue_0",
        "src/components/TreeView.vue_2",
        "src/store/index.js_0",
        "src/store/index.js_1",
        "src/store/index.js_2",
        "src/store/index.js_3"
    ],
    "tests": [],
    "hints": [],
    "play_mode": "all",
    "swimmPatch": {
        "src/components/TreeView.vue": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/components/TreeView.vue b/src/components/TreeView.vue\nindex daa8468..a625f58 100644\n--- a/src/components/TreeView.vue\n+++ b/src/components/TreeView.vue",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": [
                            "In this step wow"
                        ]
                    },
                    "hunkDiffLines": [
                        "@@ -34,20 +34,26 @@",
                        " </template>\r",
                        " \r",
                        " <script>\r",
                        "-import { mapActions, mapState } from \"vuex\";",
                        "+//import { mapActions, mapState } from \"vuex\";",
                        " ",
                        " export default {",
                        "   name: \"TreeView\",",
                        "   props: {",
                        "     items: Array,",
                        "-    title: String,",
                        "-    readOnly: Boolean,",
                        "   },",
                        "-  computed: {",
                        "+  data() {",
                        "-    ...mapState([\"nextId\"]),",
                        "+    return { nextId: 0 };",
                        "+  },",
                        "+  mounted() {",
                        "+    if (localStorage.getItem(\"nextId\")) {",
                        "+      try {",
                        "+        this.nextId = Number(localStorage.getItem(\"nextId\"));",
                        "+      } catch (e) {",
                        "+        localStorage.removeItem(\"nextId\");",
                        "+      }",
                        "+    }",
                        "   },",
                        "   methods: {",
                        "-    ...mapActions([\"saveNextIdToLocalStorage\"]),",
                        "     deleteItem(id, items = null, found = false) {\r",
                        "       if (!found) {\r",
                        "         if (!items) {\r"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -69,15 +75,11 @@",
                        "     addChild(item) {\r",
                        "       if (!item.children) {\r",
                        "         this.$set(item, \"children\", []);\r",
                        "       }\r",
                        " \r",
                        "       const name = \"\";\r",
                        "       const id = this.nextId;\r",
                        " \r",
                        "-      item.children.push({\r",
                        "-        id,\r",
                        "-        name,\r",
                        "-      });\r",
                        "       this.saveNextIdToLocalStorage(id + 1);\r",
                        "       this.updateItems();\r",
                        "     },\r"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -96,7 +98,8 @@",
                        "         id: this.nextId,\r",
                        "         name: \"\",\r",
                        "       });\r",
                        "-      this.saveNextIdToLocalStorage(this.nextId + 1);",
                        "+      this.nextId+=1;",
                        "+      localStorage.setItem(\"nextId\", this.nextId);",
                        "       this.updateItems();\r",
                        "     },\r",
                        "   },\r"
                    ]
                }
            ]
        },
        "src/store/index.js": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/store/index.js b/src/store/index.js\nindex 543b269..2afe0b6 100644\n--- a/src/store/index.js\n+++ b/src/store/index.js",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -10,10 +10,6 @@",
                        " \r",
                        "   },\r",
                        "   mutations: {\r",
                        "-    UPDATE_ITEMS(state, items) {\r",
                        "-      state.items = [];\r",
                        "-      state.items.push(...items);\r",
                        "-    },\r",
                        "     UPDATE_NEXTID(state, nextId) {\r",
                        "       state.nextId = nextId;\r",
                        "     },\r"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -20,27 +16,6 @@",
                        "   },\r",
                        "   actions: {\r",
                        "     updateStore({ commit }) {\r",
                        "-      if (localStorage.getItem(\"items\")) {",
                        "-        try {",
                        "-          const itemsFromStorage = JSON.parse(localStorage.getItem(\"items\"));",
                        "-          commit('UPDATE_ITEMS', itemsFromStorage);",
                        "-",
                        "-        } catch (e) {",
                        "-          localStorage.removeItem(\"items\");",
                        "-        }",
                        "-      }",
                        "-",
                        "-      if (localStorage.getItem(\"nextID\")) {",
                        "-        try {",
                        "-          const nextID = JSON.parse(localStorage.getItem(\"nextID\"));",
                        "-          commit('UPDATE_NEXTID', nextID);",
                        "-",
                        "-        } catch (e) {",
                        "-          localStorage.removeItem(\"nextID\");",
                        "-        }",
                        "-      }",
                        "-    },",
                        "-    updateItems({ commit }) {",
                        "       if (localStorage.getItem(\"items\")) {\r",
                        "         try {\r",
                        "           const items = JSON.parse(localStorage.getItem(\"items\"));\r"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -50,8 +25,7 @@",
                        "           localStorage.removeItem(\"items\");\r",
                        "         }\r",
                        "       }\r",
                        "-    },",
                        "+",
                        "-    updateNextID({ commit }) {",
                        "       if (localStorage.getItem(\"nextID\")) {\r",
                        "         try {\r",
                        "           const nextID = JSON.parse(localStorage.getItem(\"nextID\"));\r"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -62,23 +36,6 @@",
                        "         }\r",
                        "       }\r",
                        "     },\r",
                        "-    saveItemsToLocalStorage({ commit }, items) {\r",
                        "-      const parsed = JSON.stringify(items);\r",
                        "-      localStorage.setItem(\"items\", parsed);\r",
                        "-      commit('UPDATE_ITEMS', items);\r",
                        "-    },\r",
                        "-    saveNextIdToLocalStorage({ commit }, nextId) {\r",
                        "-      localStorage.setItem(\"nextID\", nextId);\r",
                        "-      commit('UPDATE_NEXTID', nextId);\r",
                        "-    },\r",
                        "-    saveToLocalStorage({ commit }, items, nextId) {\r",
                        "-      const parsed = JSON.stringify(items);\r",
                        "-      localStorage.setItem(\"items\", parsed);\r",
                        "-      localStorage.setItem(\"nextID\", nextId);\r",
                        "-      commit('UPDATE_ITEMS', items);\r",
                        "-      commit('UPDATE_NEXTID', nextId);\r",
                        "-    },\r",
                        "-  },\r",
                        "   getters: {\r",
                        "     getItemsRoot: (state) => (state.items),\r",
                        "     getNextId: (state) => state.nextId,\r"
                    ]
                }
            ]
        }
    },
    "app_version": "0.3.4-beta.1",
    "file_version": "1.0.4",
    "diff": "diff --git a/src/components/TreeView.vue b/src/components/TreeView.vue\nindex daa8468..a625f58 100644\n--- a/src/components/TreeView.vue\n+++ b/src/components/TreeView.vue\n@@ -34,20 +34,26 @@\n </template>\r\n \r\n <script>\r\n-import { mapActions, mapState } from \"vuex\";\n+//import { mapActions, mapState } from \"vuex\";\n \n export default {\n   name: \"TreeView\",\n   props: {\n     items: Array,\n-    title: String,\n-    readOnly: Boolean,\n   },\n-  computed: {\n+  data() {\n-    ...mapState([\"nextId\"]),\n+    return { nextId: 0 };\n+  },\n+  mounted() {\n+    if (localStorage.getItem(\"nextId\")) {\n+      try {\n+        this.nextId = Number(localStorage.getItem(\"nextId\"));\n+      } catch (e) {\n+        localStorage.removeItem(\"nextId\");\n+      }\n+    }\n   },\n   methods: {\n-    ...mapActions([\"saveNextIdToLocalStorage\"]),\n     deleteItem(id, items = null, found = false) {\r\n       if (!found) {\r\n         if (!items) {\r\n@@ -69,15 +75,11 @@\n     addChild(item) {\r\n       if (!item.children) {\r\n         this.$set(item, \"children\", []);\r\n       }\r\n \r\n       const name = \"\";\r\n       const id = this.nextId;\r\n \r\n-      item.children.push({\r\n-        id,\r\n-        name,\r\n-      });\r\n       this.saveNextIdToLocalStorage(id + 1);\r\n       this.updateItems();\r\n     },\r\n@@ -96,7 +98,8 @@\n         id: this.nextId,\r\n         name: \"\",\r\n       });\r\n-      this.saveNextIdToLocalStorage(this.nextId + 1);\n+      this.nextId+=1;\n+      localStorage.setItem(\"nextId\", this.nextId);\n       this.updateItems();\r\n     },\r\n   },\r\ndiff --git a/src/store/index.js b/src/store/index.js\nindex 543b269..2afe0b6 100644\n--- a/src/store/index.js\n+++ b/src/store/index.js\n@@ -10,10 +10,6 @@\n \r\n   },\r\n   mutations: {\r\n-    UPDATE_ITEMS(state, items) {\r\n-      state.items = [];\r\n-      state.items.push(...items);\r\n-    },\r\n     UPDATE_NEXTID(state, nextId) {\r\n       state.nextId = nextId;\r\n     },\r\n@@ -20,27 +16,6 @@\n   },\r\n   actions: {\r\n     updateStore({ commit }) {\r\n-      if (localStorage.getItem(\"items\")) {\n-        try {\n-          const itemsFromStorage = JSON.parse(localStorage.getItem(\"items\"));\n-          commit('UPDATE_ITEMS', itemsFromStorage);\n-\n-        } catch (e) {\n-          localStorage.removeItem(\"items\");\n-        }\n-      }\n-\n-      if (localStorage.getItem(\"nextID\")) {\n-        try {\n-          const nextID = JSON.parse(localStorage.getItem(\"nextID\"));\n-          commit('UPDATE_NEXTID', nextID);\n-\n-        } catch (e) {\n-          localStorage.removeItem(\"nextID\");\n-        }\n-      }\n-    },\n-    updateItems({ commit }) {\n       if (localStorage.getItem(\"items\")) {\r\n         try {\r\n           const items = JSON.parse(localStorage.getItem(\"items\"));\r\n@@ -50,8 +25,7 @@\n           localStorage.removeItem(\"items\");\r\n         }\r\n       }\r\n-    },\n+\n-    updateNextID({ commit }) {\n       if (localStorage.getItem(\"nextID\")) {\r\n         try {\r\n           const nextID = JSON.parse(localStorage.getItem(\"nextID\"));\r\n@@ -62,23 +36,6 @@\n         }\r\n       }\r\n     },\r\n-    saveItemsToLocalStorage({ commit }, items) {\r\n-      const parsed = JSON.stringify(items);\r\n-      localStorage.setItem(\"items\", parsed);\r\n-      commit('UPDATE_ITEMS', items);\r\n-    },\r\n-    saveNextIdToLocalStorage({ commit }, nextId) {\r\n-      localStorage.setItem(\"nextID\", nextId);\r\n-      commit('UPDATE_NEXTID', nextId);\r\n-    },\r\n-    saveToLocalStorage({ commit }, items, nextId) {\r\n-      const parsed = JSON.stringify(items);\r\n-      localStorage.setItem(\"items\", parsed);\r\n-      localStorage.setItem(\"nextID\", nextId);\r\n-      commit('UPDATE_ITEMS', items);\r\n-      commit('UPDATE_NEXTID', nextId);\r\n-    },\r\n-  },\r\n   getters: {\r\n     getItemsRoot: (state) => (state.items),\r\n     getNextId: (state) => state.nextId,\r\n",
    "last_commit_sha_for_swimm_patch": "db1a721038d2928cd68f9ca2981337f1d5bc3148"
}