{
    "id": "TEy4TkeAKATiOHkDDffZ",
    "name": "Events",
    "file_version": "2.0.1",
    "meta": {
        "app_version": "0.4.0-0",
        "file_blobs": {
            "src/components/TreeView.vue": "c3b2def8a9cd275c693aad67aed2f154ba9b569c",
            "src/views/Home.vue": "b847144797ff7dbf880f0ab13aed872c3969544e",
            "src/App.vue": "2ed92635f68ca67b31bcc0e8c4c6a9b326ba79e2"
        }
    },
    "content": [
        {
            "type": "text",
            "text": "In this unit we will see how to run Javascript on events, and how to create custom events."
        },
        {
            "type": "snippet",
            "path": "src/components/TreeView.vue",
            "comments": [
                "We can use the `v-on` or  in short `@` to let vue know what JS method to run on event. In this example, when the button is clicked the addEntry method is executed."
            ],
            "firstLineNumber": 2,
            "lines": [
                "   <div>",
                "     <v-container class=\"text-center\">",
                "       <v-toolbar-title class=\"custom-class\">{{ title }}</v-toolbar-title>",
                "*      <v-btn v-if=\"!readOnly\" icon @click=\"addEntry\"",
                "         ><v-icon>mdi-plus</v-icon></v-btn",
                "       >",
                "     </v-container>"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "We use `$emit` to create a new custom event for the component. In this example we created an event with the name `updateItems` so the parent component `App` could listen to the event."
            ],
            "firstLineNumber": 69,
            "lines": [
                "     setTitle(newTitle){",
                "       this.title = newTitle;",
                "     },",
                "*    updateItems(updateItems) {",
                "*      this.saveItemsToLocalStorage(updateItems);",
                "*      this.updateStore();",
                "*      this.$emit(\"updateItems\");",
                "*    },",
                "*  },",
                " };",
                " </script>"
            ]
        },
        {
            "type": "snippet",
            "path": "src/App.vue",
            "comments": [
                "The app component listen to custom events of child component using the `v-on` or `@` directive."
            ],
            "firstLineNumber": 4,
            "lines": [
                "     <navdrawer :menu-items=\"menuItems\" />",
                "     <v-main>",
                "       <v-container fluid>",
                "*        <router-view @updateItems=\"updateItems\"></router-view>",
                "       </v-container>",
                "     </v-main>",
                " "
            ]
        },
        {
            "type": "text",
            "text": ""
        }
    ],
    "task": {
        "dod": "",
        "hints": [],
        "tests": []
    }
}
