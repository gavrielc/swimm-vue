{
    "id": "LQdLZBZD713jOf189eqS",
    "name": "<script>",
    "file_version": "2.0.1",
    "meta": {
        "app_version": "0.4.0-0",
        "file_blobs": {
            "src/views/About.vue": "b6bc32516a77a823a27b8be060b0036b03bfd667",
            "src/views/Home.vue": "b847144797ff7dbf880f0ab13aed872c3969544e"
        }
    },
    "content": [
        {
            "type": "text",
            "text": "The script tag contains the component’s JavaScript code. Within this we can do things like import other components, or other packages we need for our component to work and handle the data and logic of the component."
        },
        {
            "type": "snippet",
            "path": "src/views/About.vue",
            "comments": [
                "Inside the `<script></script>` tags is where you write the javascript for the component"
            ],
            "firstLineNumber": 6,
            "lines": [
                "   </v-container>",
                " </template>",
                " ",
                "*<script>",
                "*import HelloWorld from \"@/components/HelloWorld.vue\";",
                "*",
                "*export default {",
                "*  name: \"About\",",
                "*  components: {",
                "*    HelloWorld,",
                "*  },",
                "*  computed: {",
                "*    aboutPage() {",
                "*      return `Today is ${(new Date).toString()}`;",
                "*    },",
                "*  },",
                "*};",
                "*</script>"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "You can import components and other JS code and models  that you would like to use in the component."
            ],
            "firstLineNumber": 5,
            "lines": [
                " </template>",
                " ",
                " <script>",
                "*// @ is an alias to /src",
                "*import TreeView from \"@/components/TreeView.vue\";",
                "*import { mapActions, mapState } from \"vuex\";",
                " ",
                " export default {",
                "   name: \"Home\","
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "The export object is what allows you to define and export this named component and reuse it across your application.",
                "You can give a name to the component, it is useful for recursive components, debugging (dev tools) and when using `is` attribute in a template."
            ],
            "firstLineNumber": 10,
            "lines": [
                " import { mapActions, mapState } from \"vuex\";",
                " ",
                " export default {",
                "*  name: \"Home\",",
                "   data() {",
                "     return {",
                "       title: 'Home'"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "`data` is a function that returns an object with data that can used in the template and passed to child components (as props) and inside the script with the `this` keyword.",
                "Note that data is reactive, the DOM will be rendered again when it changes.",
                "This data is private, and only for the component itself to use. Other components do not have access to it."
            ],
            "firstLineNumber": 11,
            "lines": [
                " ",
                " export default {",
                "   name: \"Home\",",
                "*  data() {",
                "*    return {",
                "*      title: 'Home'",
                "*    }",
                "*  },",
                "   components: {",
                "     TreeView,",
                "   },"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "In this step we register the imported component `TreeView` so we can use it in the template."
            ],
            "firstLineNumber": 16,
            "lines": [
                "       title: 'Home'",
                "     }",
                "   },",
                "*  components: {",
                "*    TreeView,",
                "*  },",
                "   props: {",
                "     itemId: Number,",
                "   },"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "properties are the way that we pass data from a parent component down to it's child components (using the bind directive)."
            ],
            "firstLineNumber": 19,
            "lines": [
                "   components: {",
                "     TreeView,",
                "   },",
                "*  props: {",
                "*    itemId: Number,",
                "*  },",
                "   computed: {",
                "     ...mapState([\"items\", \"nextId\"]),",
                "     itemToDisplay() {"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "`computed`  are functions that returns values that can be used in the template.",
                "We will use computed when the in-template expression is to complex."
            ],
            "firstLineNumber": 22,
            "lines": [
                "   props: {",
                "     itemId: Number,",
                "   },",
                "*  computed: {",
                "     ...mapState([\"items\", \"nextId\"]),",
                "     itemToDisplay() {",
                "       if (!this.itemId) {"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "Methods are incredibly useful for connecting functionality to directives for events, or even just creating a small bit of logic to be reused like any other function. You can call a method within another method. You can also call a method inside a lifecycle hook, they’re very versatile."
            ],
            "firstLineNumber": 43,
            "lines": [
                "   created() {",
                "     this.updateStore();",
                "   },",
                "*  methods: {",
                "     ...mapActions([\"saveItemsToLocalStorage\", \"updateStore\"]),",
                "     findItem(id, items = null) {",
                "       if (!items) {"
            ]
        },
        {
            "type": "snippet",
            "path": "src/views/Home.vue",
            "comments": [
                "Created is one of the lifecycle hook, it will be called once the component is created."
            ],
            "firstLineNumber": 40,
            "lines": [
                "       return true;",
                "     }",
                "   },",
                "*  created() {",
                "*    this.updateStore();",
                "*  },",
                "   methods: {",
                "     ...mapActions([\"saveItemsToLocalStorage\", \"updateStore\"]),",
                "     findItem(id, items = null) {"
            ]
        },
        {
            "type": "text",
            "text": ""
        }
    ],
    "task": {
        "dod": "",
        "hints": [],
        "tests": []
    }
}
