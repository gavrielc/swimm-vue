{
    "id": "mVGqLysw6rKXvz17fHo9",
    "name": "Component Script ",
    "dod": "In this unit you should  ",
    "description": "",
    "summary": "",
    "hunksOrder": [
        "src/views/Home.vue_0",
        "src/views/Home.vue_1",
        "src/views/Home.vue_2",
        "src/views/Home.vue_3",
        "src/views/Home.vue_4"
    ],
    "tests": [],
    "hints": [],
    "swimmPatch": {
        "src/views/Home.vue": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/views/Home.vue b/src/views/Home.vue\nindex 770ee65..770ee65 100644\n--- a/src/views/Home.vue\n+++ b/src/views/Home.vue",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": [
                            "Inside the `<script></script>` tags is where you write the javascript for the component"
                        ]
                    },
                    "hunkDiffLines": [
                        "@@ -4,11 +4,6 @@",
                        "   </v-container>",
                        " </template>",
                        " ",
                        "-<script>",
                        "-// @ is an alias to /src",
                        "-import TreeView from \"@/components/TreeView.vue\";",
                        "-import { mapActions, mapState } from \"vuex\";",
                        "-",
                        " export default {",
                        "   name: \"Home\",",
                        "   data() {"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": [
                            "You can give a name to the component, it is useful for recursive components, debugging (dev tools) and `is` attribute in template.",
                            "`data` is a function that returns an object with data that can used in the template and passed to child components (as props) and inside the script with the `this` keyword.",
                            "Note that data is reactive, the DOM will be rendered again when it changes."
                        ]
                    },
                    "hunkDiffLines": [
                        "@@ -9,13 +9,6 @@",
                        " import TreeView from \"@/components/TreeView.vue\";",
                        " import { mapActions, mapState } from \"vuex\";",
                        " ",
                        "-export default {",
                        "-  name: \"Home\",",
                        "-  data() {",
                        "-    return {",
                        "-      title: 'Home'",
                        "-    }",
                        "-  },",
                        "   components: {",
                        "     TreeView,",
                        "   },"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": [
                            "In this step we register the imported component `TreeView` so we can use it in the template",
                            "`props` are data that is bind from a parent component."
                        ]
                    },
                    "hunkDiffLines": [
                        "@@ -16,12 +16,6 @@",
                        "       title: 'Home'",
                        "     }",
                        "   },",
                        "-  components: {",
                        "-    TreeView,",
                        "-  },",
                        "-  props: {",
                        "-    itemId: Number,",
                        "-  },",
                        "   computed: {",
                        "     ...mapState([\"items\", \"nextId\"]),",
                        "     itemToDisplay() {"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": [
                            "Under computed you can define functions that returns values that can be used in the template.",
                            "You will use computed when the an in-template expression is to complex."
                        ]
                    },
                    "hunkDiffLines": [
                        "@@ -22,7 +22,6 @@",
                        "   props: {",
                        "     itemId: Number,",
                        "   },",
                        "-  computed: {",
                        "     ...mapState([\"items\", \"nextId\"]),",
                        "     itemToDisplay() {",
                        "       if (!this.itemId) {"
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": [
                            "Methods are incredibly useful for connecting functionality to directives for events, or even just creating a small bit of logic to be reused like any other function. You can call a method within another method, for example. You can also call a method inside a lifecycle hook. Theyâ€™re very versatile."
                        ]
                    },
                    "hunkDiffLines": [
                        "@@ -43,7 +43,6 @@",
                        "   created() {",
                        "     this.updateStore();",
                        "   },",
                        "-  methods: {",
                        "     ...mapActions([\"saveItemsToLocalStorage\", \"updateStore\"]),",
                        "     findItem(id, items = null) {",
                        "       if (!items) {"
                    ]
                }
            ]
        }
    },
    "app_version": "0.2.7",
    "file_version": "1.0.4"
}