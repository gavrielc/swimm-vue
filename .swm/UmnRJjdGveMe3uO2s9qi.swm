{
    "id": "UmnRJjdGveMe3uO2s9qi",
    "name": "swimm create",
    "dod": "In this unit you should complete the unit",
    "description": "Unit Intro",
    "summary": "",
    "hunksOrder": [
        "src/components/DarkmodeSwitch.vue_0",
        "src/components/TreeView.vue_0"
    ],
    "tests": [],
    "hints": [],
    "play_mode": "all",
    "swimmPatch": {
        "src/components/DarkmodeSwitch.vue": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/components/DarkmodeSwitch.vue b/src/components/DarkmodeSwitch.vue\nindex b799262..f73363d 100644\n--- a/src/components/DarkmodeSwitch.vue\n+++ b/src/components/DarkmodeSwitch.vue",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -13,10 +13,5 @@",
                        "   created(){",
                        "       this.toggleText();",
                        "   },",
                        "-  methods: {",
                        "-      toggleText() {",
                        "-          this.text = this.$vuetify.theme.dark ? 'night' : 'day';",
                        "-      }",
                        "-  }",
                        " };",
                        " </script>"
                    ]
                }
            ]
        },
        "src/components/TreeView.vue": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/components/TreeView.vue b/src/components/TreeView.vue\nindex c3b2def..e9f1944 100644\n--- a/src/components/TreeView.vue\n+++ b/src/components/TreeView.vue",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -48,24 +48,6 @@",
                        "   },",
                        "   methods: {",
                        "     ...mapActions([\"saveNextIdToLocalStorage\"]),",
                        "-    deleteItem(id, items = null, found = false) {",
                        "-      if (!found) {",
                        "-        if (!items) {",
                        "-          items = this.items;",
                        "-        }",
                        "-",
                        "-        items.forEach((child, index) => {",
                        "-          if (child.id == id) {",
                        "-            items.splice(index, 1);",
                        "-            found = true;",
                        "-            this.updateItems();",
                        "-          }",
                        "-          if (child.children) {",
                        "-            this.deleteItem(id, child.children);",
                        "-          }",
                        "-        });",
                        "-      }",
                        "-    },",
                        "     addChild(item) {",
                        "       if (!item.children) {",
                        "         this.$set(item, \"children\", []);"
                    ]
                }
            ]
        }
    },
    "app_version": "0.3.4-beta.1",
    "file_version": "1.0.4",
    "diff": "diff --git a/src/components/DarkmodeSwitch.vue b/src/components/DarkmodeSwitch.vue\nindex b799262..f73363d 100644\n--- a/src/components/DarkmodeSwitch.vue\n+++ b/src/components/DarkmodeSwitch.vue\n@@ -13,10 +13,5 @@\n   created(){\n       this.toggleText();\n   },\n-  methods: {\n-      toggleText() {\n-          this.text = this.$vuetify.theme.dark ? 'night' : 'day';\n-      }\n-  }\n };\n </script>\ndiff --git a/src/components/TreeView.vue b/src/components/TreeView.vue\nindex c3b2def..e9f1944 100644\n--- a/src/components/TreeView.vue\n+++ b/src/components/TreeView.vue\n@@ -48,24 +48,6 @@\n   },\n   methods: {\n     ...mapActions([\"saveNextIdToLocalStorage\"]),\n-    deleteItem(id, items = null, found = false) {\n-      if (!found) {\n-        if (!items) {\n-          items = this.items;\n-        }\n-\n-        items.forEach((child, index) => {\n-          if (child.id == id) {\n-            items.splice(index, 1);\n-            found = true;\n-            this.updateItems();\n-          }\n-          if (child.children) {\n-            this.deleteItem(id, child.children);\n-          }\n-        });\n-      }\n-    },\n     addChild(item) {\n       if (!item.children) {\n         this.$set(item, \"children\", []);\n"
}